# Generated by Django 4.2.1 on 2023-05-16 09:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Заголовок статьи')),
                ('anons', models.CharField(max_length=250, verbose_name='Анонс статьи')),
                ('summary', models.TextField(max_length=1000, verbose_name='Описание товара')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'Статью',
                'verbose_name_plural': 'Статьи',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название компании')),
            ],
            options={
                'verbose_name': 'Компанию',
                'verbose_name_plural': 'Компании',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, null=True, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phoneNumber', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('message', models.TextField(max_length=200, verbose_name='Текст сообщения')),
            ],
            options={
                'verbose_name': 'Обращение',
                'verbose_name_plural': 'Обращения',
                'ordering': ['-email'],
            },
        ),
        migrations.CreateModel(
            name='GroupProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.CharField(help_text='Введите вид товара', max_length=20, unique=True, verbose_name='Вид товара')),
                ('slug', models.SlugField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['view'],
            },
        ),
        migrations.CreateModel(
            name='Side',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(help_text='Введите сторону', max_length=20, verbose_name='Сторона')),
            ],
            options={
                'verbose_name': 'Сторона',
                'verbose_name_plural': 'Стороны',
                'ordering': ['side'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_img', verbose_name='Добавить изображение')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=200, verbose_name='url')),
                ('title', models.CharField(help_text='Введите название товара', max_length=200, verbose_name='Название товара')),
                ('summary', models.TextField(help_text='Введите описание товара', max_length=1000, verbose_name='Описание товара')),
                ('product_code', models.IntegerField(help_text='Введите код товара', null=True, verbose_name='Код товара')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите цену товара', max_digits=5, null=True, verbose_name='Цена товара')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Введите количество товара', verbose_name='Количество товара')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/%Y/%m/%d', verbose_name='Добавить изображение')),
                ('available', models.BooleanField(default=True)),
                ('company', models.ForeignKey(help_text='Выберите компанию', null=True, on_delete=django.db.models.deletion.CASCADE, to='dj_app.company', verbose_name='Компания')),
                ('manufacturer', models.ForeignKey(help_text='Введите страну производителя', max_length=20, null=True, on_delete=django.db.models.deletion.CASCADE, to='dj_app.country', verbose_name='Страна производителя')),
                ('side', models.ForeignKey(help_text='Выберите сторону', null=True, on_delete=django.db.models.deletion.CASCADE, to='dj_app.side', verbose_name='Сторона')),
                ('view', models.ForeignKey(help_text='Выберите вид (категорию) товара', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='dj_app.groupproduct', verbose_name='Вид (категория) товара')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['title'],
                'index_together': {('id', 'slug')},
            },
        ),
    ]
